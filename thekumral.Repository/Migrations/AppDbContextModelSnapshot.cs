// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using thekumral.Repository;

#nullable disable

namespace thekumral.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("cb94223b-ccb8-4f2f-94d7-0df96a7f012c"),
                            RoleId = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            RoleId = new Guid("7cb750cf-3612-4fb4-9f7d-a38ba8f16bf4")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0413"),
                            RoleId = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0111"),
                            RoleId = new Guid("edf6c246-41d8-475f-8d92-41dddac5aefb")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0431"),
                            RoleId = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e")
                        },
                        new
                        {
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0222"),
                            RoleId = new Guid("7cb750cf-3612-4fb4-9f7d-a38ba8f16bf4")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("thekumral.Core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c569a9a-5f41-478f-9d17-69ac5b02ae0b"),
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f061c"),
                            CreatedBy = "Deneme",
                            IsDeleted = false,
                            Name = "C# Nedir ?",
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427")
                        },
                        new
                        {
                            Id = new Guid("d23e4f79-9600-4b5e-b3e9-756cdcacd2b1"),
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f061c"),
                            CreatedBy = "Deneme",
                            IsDeleted = false,
                            Name = "Visual Studio - Vs Code Çatışması",
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427")
                        });
                });

            modelBuilder.Entity("thekumral.Core.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f061c"),
                            CreatedBy = "Super Admin",
                            Description = "Description",
                            IsDeleted = false,
                            Name = "thekumral"
                        },
                        new
                        {
                            Id = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f044c"),
                            CreatedBy = "Super Admin",
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Kumrals"
                        },
                        new
                        {
                            Id = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f032c"),
                            CreatedBy = "Super Admin",
                            Description = "Description",
                            IsDeleted = false,
                            Name = "CodeLikeARose"
                        });
                });

            modelBuilder.Entity("thekumral.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e32c0b6-5884-4aca-ac92-e203545386a0"),
                            CategoryId = new Guid("4c569a9a-5f41-478f-9d17-69ac5b02ae0b"),
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f044c"),
                            Content = "Asp.net Core Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Vivamus suscipit tortor eget felis porttitor volutpat. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Proin eget tortor risus. Donec rutrum congue leo eget malesuada. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Sed porttitor lectus nibh. Curabitur aliquet quam id dui posuere blandit. Mauris blandit aliquet elit, eget tincidunt nibh pulvinar a. Curabitur aliquet quam id dui posuere blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla porttitor accumsan tincidunt. Pellentesque in ipsum id orci porta dapibus. Vivamus magna justo, lacinia eget consectetur sed, convallis at tellus. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi.",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2024, 7, 5, 22, 26, 16, 938, DateTimeKind.Local).AddTicks(3976),
                            IsDeleted = false,
                            ShortContent = "Short Content",
                            Title = "Asp.net Core Deneme Makalesi 1",
                            Url = "www.google.com",
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0222"),
                            ViewCount = 15
                        },
                        new
                        {
                            Id = new Guid("fdd39015-31fe-4df7-bf5b-659d54173080"),
                            CategoryId = new Guid("d23e4f79-9600-4b5e-b3e9-756cdcacd2b1"),
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f044c"),
                            Content = "Visual Studio Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Vivamus suscipit tortor eget felis porttitor volutpat. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi. Sed porttitor lectus nibh. Nulla porttitor accumsan tincidunt. Proin eget tortor risus. Donec rutrum congue leo eget malesuada. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Sed porttitor lectus nibh. Curabitur aliquet quam id dui posuere blandit. Mauris blandit aliquet elit, eget tincidunt nibh pulvinar a. Curabitur aliquet quam id dui posuere blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla porttitor accumsan tincidunt. Pellentesque in ipsum id orci porta dapibus. Vivamus magna justo, lacinia eget consectetur sed, convallis at tellus. Praesent sapien massa, convallis a pellentesque nec, egestas non nisi.",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2024, 7, 5, 22, 26, 16, 938, DateTimeKind.Local).AddTicks(3995),
                            IsDeleted = false,
                            ShortContent = "Short Content",
                            Title = "Visual Studio Deneme Makalesi 1",
                            Url = "www.google.com",
                            UserId = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0222"),
                            ViewCount = 15
                        });
                });

            modelBuilder.Entity("thekumral.Core.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("16ea936c-7a28-4c30-86a2-9a9704b6115e"),
                            ConcurrencyStamp = "0291cae2-ca10-404f-96dc-65427e87143e",
                            Name = "Superadmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("7cb750cf-3612-4fb4-9f7d-a38ba8f16bf4"),
                            ConcurrencyStamp = "e940627b-9425-4f59-9bf2-7a07b5f07d1e",
                            Name = "Companyadmin",
                            NormalizedName = "COMPANYADMIN"
                        },
                        new
                        {
                            Id = new Guid("edf6c246-41d8-475f-8d92-41dddac3aefb"),
                            ConcurrencyStamp = "138eb8ff-3538-435e-a810-8861ad23ddb5",
                            Name = "Companyauthor",
                            NormalizedName = "COMPANYAUTHOR"
                        },
                        new
                        {
                            Id = new Guid("edf6c246-41d8-475f-8d92-41dddac5aefb"),
                            ConcurrencyStamp = "052230ce-9a8f-48e5-98e7-40aa409cd4d0",
                            Name = "DefaultUser",
                            NormalizedName = "DEFAULTUSER"
                        });
                });

            modelBuilder.Entity("thekumral.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0222"),
                            AccessFailedCount = 0,
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f044c"),
                            ConcurrencyStamp = "fce9de52-ee9b-473d-bbdf-a3c635d0b63d",
                            Email = "omer@kumral.com",
                            EmailConfirmed = false,
                            FirstName = "Ömer Faruk",
                            LastName = "KUMRAL",
                            LockoutEnabled = false,
                            NormalizedEmail = "OMER@KUMRAL.COM",
                            NormalizedUserName = "",
                            PasswordHash = "AQAAAAIAAYagAAAAEDS7IU3vHVUEkAlvLRbswrjOLV/84aYeBe3sCaysfR2b/3P8y2SK85qjEK1J0JHAeA==",
                            PhoneNumber = "+905494000602",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d723f48f-5ece-4b51-bb81-2c1d61f1f8a0",
                            TwoFactorEnabled = false,
                            UserName = ""
                        },
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0431"),
                            AccessFailedCount = 0,
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f044c"),
                            ConcurrencyStamp = "6077f85a-593d-4be4-90b7-952b8739aea0",
                            Email = "thekumral@kumral.com",
                            EmailConfirmed = false,
                            FirstName = "Ömer Faruk",
                            LastName = "KUMRAL",
                            LockoutEnabled = false,
                            NormalizedEmail = "THEKUMRAL@KUMRAL.COM",
                            NormalizedUserName = "THEKUMRAL",
                            PasswordHash = "AQAAAAIAAYagAAAAEFPgGo+VXKyOSQ0oDzzqjzUxIDJ8jWuZ4sop1d91J035Gp/I8IQcSZl5q/6XWiMgjg==",
                            PhoneNumber = "+905494000602",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "651a00ba-4b03-47e2-9afa-b7fe8894042f",
                            TwoFactorEnabled = false,
                            UserName = "thekumral"
                        },
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0111"),
                            AccessFailedCount = 0,
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f061c"),
                            ConcurrencyStamp = "5b37b359-57de-414d-902e-ad0e313c4d67",
                            Email = "default@apadesign.net",
                            EmailConfirmed = false,
                            FirstName = "Default",
                            LastName = "USER",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEFAULT@APADESIGN.NET",
                            NormalizedUserName = "DEFAULTUSER",
                            PasswordHash = "AQAAAAIAAYagAAAAEF7ch6tGsNlDB0AJ+iI/XQlR+LgQO4GoBb8Rk6MLMeP1Oq6ZATqg97Ax7X1qKr6Ifg==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "faf6744a-8b8c-47a5-a549-0719b4f85891",
                            TwoFactorEnabled = false,
                            UserName = "defaultUser"
                        },
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0427"),
                            AccessFailedCount = 0,
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f061c"),
                            ConcurrencyStamp = "a8474f8c-bde2-455d-a43c-0edbc5fec83f",
                            Email = "mahmutkumral@apadesign.net",
                            EmailConfirmed = false,
                            FirstName = "Mahmut",
                            LastName = "KUMRAL",
                            LockoutEnabled = false,
                            NormalizedEmail = "MAHMUTKUMRAL@APADESIGN.NET",
                            NormalizedUserName = "COMPANYADMINFORAPA",
                            PasswordHash = "AQAAAAIAAYagAAAAEN6nnydOOSREg0Ospt71EaAKCZF0TH5mSXgMJh3Y+XpxhBWJaEedxSCSbMvsHqUVmg==",
                            PhoneNumber = "+905363282325",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bbaaafad-ddbb-438e-97c7-7ce641728519",
                            TwoFactorEnabled = false,
                            UserName = "CompanyAdminForApa"
                        },
                        new
                        {
                            Id = new Guid("cb94223b-ccb8-4f2f-94d7-0df96a7f012c"),
                            AccessFailedCount = 0,
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f061c"),
                            ConcurrencyStamp = "7b61eb99-363f-4c3a-b62b-519a62672f2d",
                            Email = "info@apadesign.net",
                            EmailConfirmed = false,
                            FirstName = "SuperMahmut",
                            LastName = "KUMRAL",
                            LockoutEnabled = false,
                            NormalizedEmail = "INFO@APADESIGN.NET",
                            NormalizedUserName = "SUPERADMINAPA",
                            PasswordHash = "AQAAAAIAAYagAAAAEEF02cuZj806poFtwVFXcj8/eeJuTkcgBA6eBLTb/08OzAEd65QU/frKwYAdmzr3dQ==",
                            PhoneNumber = "+905439999999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "628a68fb-e8df-4a1f-a3da-57da7788221f",
                            TwoFactorEnabled = false,
                            UserName = "SuperAdminApa"
                        },
                        new
                        {
                            Id = new Guid("3aa42229-1c0f-4630-8c1a-db879ecd0413"),
                            AccessFailedCount = 0,
                            CompanyId = new Guid("cb94223b-ccb8-4f2f-93d7-0df96a7f061c"),
                            ConcurrencyStamp = "c3ee34d5-c10b-4187-b400-c97b6e026c38",
                            Email = "Mustafa@apadesign.net",
                            EmailConfirmed = false,
                            FirstName = "Mustafa",
                            LastName = "KUMRAL",
                            LockoutEnabled = false,
                            NormalizedEmail = "MUSTAFA@APADESIGN.NET",
                            NormalizedUserName = "COMPANYAUTHORFORAPA",
                            PasswordHash = "AQAAAAIAAYagAAAAEOw4LqPyUYLek2dJX2z5c6jqBTJRmw54BhOKu59d0FAoTyWITcpc0njKBfVvF9NzQg==",
                            PhoneNumber = "+905302238522",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a3f375c1-8597-4df4-b39e-274f76bd75a6",
                            TwoFactorEnabled = false,
                            UserName = "companyAuthorForApa"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("thekumral.Core.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("thekumral.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("thekumral.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("thekumral.Core.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("thekumral.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("thekumral.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("thekumral.Core.Entities.Category", b =>
                {
                    b.HasOne("thekumral.Core.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("thekumral.Core.Entities.User", null)
                        .WithMany("Category")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("thekumral.Core.Entities.Post", b =>
                {
                    b.HasOne("thekumral.Core.Entities.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("thekumral.Core.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("thekumral.Core.Entities.User", b =>
                {
                    b.HasOne("thekumral.Core.Entities.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("thekumral.Core.Entities.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("thekumral.Core.Entities.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("thekumral.Core.Entities.User", b =>
                {
                    b.Navigation("Category");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
